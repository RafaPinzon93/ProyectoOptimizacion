{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"valores",
				"valoresExel"
			],
			[
				"valor",
				"valoresCast"
			],
			[
				"valore",
				"valoresExel"
			],
			[
				"obj_",
				"obj_ruleTest"
			],
			[
				"Esta",
				"EstacionesBaseDatosDict	statement"
			],
			[
				"matri",
				"matricesTransbordoNP	statement"
			],
			[
				"topo",
				"topologiaM	statement"
			],
			[
				"nume",
				"numEstaciones	statement"
			],
			[
				"secuencia",
				"secuenciasA	statement"
			],
			[
				"secuenciaL",
				"secuenciaList2	statement"
			],
			[
				"Tiempoent",
				"_TIEMPO_ENTRE_ESTACIONES"
			],
			[
				"idtr",
				"idTrayectosNP	statement"
			],
			[
				"trayec",
				"trayectosList	statement"
			],
			[
				"idt",
				"IdTrayectos"
			],
			[
				"secuen",
				"secuenciaList	statement"
			],
			[
				"tiempoA",
				"tiempoAcumuladoSubida	function"
			],
			[
				"frecuen",
				"frecuencias	statement"
			],
			[
				"Fre",
				"FrecuenciasOptimas"
			],
			[
				"fre",
				"FrecuenciasOptimas	statement"
			],
			[
				"NUM",
				"NUMERODEMANDA	statement"
			],
			[
				"FA",
				"FACTORPASAJERO	statement"
			],
			[
				"Pasaje",
				"pasajero"
			],
			[
				"FAC",
				"FACTOROPERADEOR	statement"
			],
			[
				"server",
				"server_address	statement"
			],
			[
				"Valo",
				"ValoresFrecuencias	statement"
			],
			[
				"mtr",
				"mTransbordoB	statement"
			],
			[
				"tiem",
				"tiempoAcumuladoBajada	function"
			],
			[
				"Objetivos",
				"objetivos	statement"
			],
			[
				"obj",
				"Objetivo"
			],
			[
				"Frecuenc",
				"FrecuenciasOptimas	statement"
			],
			[
				"gen",
				"genomeList"
			],
			[
				"Fr",
				"FrecuenciasOptimas	statement"
			],
			[
				"None",
				"None	class"
			],
			[
				"obje",
				"objetivoUsuarios	statement"
			],
			[
				"frecu",
				"frecuencias	param"
			],
			[
				"Tran",
				"Transbordo"
			],
			[
				"ti",
				"tiempoEntreEstaciones	function"
			],
			[
				"mat",
				"matTransbordo	statement"
			],
			[
				"estac",
				"estacionesArray	statement"
			],
			[
				"estacioes",
				"estacionesDict	statement"
			],
			[
				"Generar",
				"GenerarControl"
			],
			[
				"tiempoLL",
				"tiempoLlegadaBusEstimado"
			],
			[
				"tst",
				"tstat"
			],
			[
				"idT",
				"idTrayectos"
			],
			[
				"leng",
				"lenghtA	statement"
			],
			[
				"array",
				"arrayServ	statement"
			],
			[
				"serviciosR",
				"serviciosRuta	function"
			],
			[
				"serviicos",
				"serviciosDict	statement"
			],
			[
				"horasDi",
				"horasDictArray	statement"
			],
			[
				"ser",
				"_serviciosRutaB"
			],
			[
				"horaIn",
				"horaInicial"
			],
			[
				"id",
				"idT"
			],
			[
				"hora",
				"horasalida"
			],
			[
				"servicios",
				"serviciosEst	statement"
			],
			[
				"esta",
				"estacionesDict	statement"
			],
			[
				"_Tra",
				"_TRAYECTOS	statement"
			],
			[
				"pilaS",
				"pilaSalidaArray	statement"
			],
			[
				"pila",
				"pilaSalida	statement"
			],
			[
				"horasD",
				"horasDictArray	statement"
			],
			[
				"hor",
				"horaSalida	statement"
			],
			[
				"convert",
				"convertHour	function"
			],
			[
				"servi",
				"serviciosRuta	function"
			],
			[
				"_tRA",
				"_TRAYECTOS	statement"
			],
			[
				"_TRA",
				"_TRAYECTOS	statement"
			],
			[
				"_hora",
				"_horaEstaciones	statement"
			],
			[
				"_Hora",
				"_horaEstacionesLlegada	statement"
			],
			[
				"tiempoViaj",
				"tiempoViajePromedioSinEspera	function"
			],
			[
				"tiempoVIaje",
				"tiempoViajePromedioSinEspera	function"
			],
			[
				"_SECUENCI",
				"_SECUENCIAS	statement"
			],
			[
				"h",
				"horaInicio"
			],
			[
				"inter",
				"intervalosPeriodosRutas	statement"
			],
			[
				"H",
				"HORAFIN	statement"
			],
			[
				"tiempoViajeP",
				"tiempoViajePromedioSinEspera	function"
			],
			[
				"modelo",
				"modeloOptimizacionPyomo"
			],
			[
				"matrices",
				"matricesTransbordo	statement"
			],
			[
				"result",
				"resultados	statement"
			],
			[
				"matT",
				"matTransbordo	statement"
			],
			[
				"obet",
				"obtenerDatosBase	function"
			],
			[
				"objet",
				"objectiveG	function"
			],
			[
				"pasajeros",
				"pasajerosE2Vmat	statement"
			],
			[
				"pasa",
				"pasajerosE2Vmat	statement"
			],
			[
				"pasjaer",
				"pasajerosE2Vmat"
			],
			[
				"NUME",
				"NUMEROESTACIONES	statement"
			],
			[
				"matrix",
				"matrixSuma	statement"
			],
			[
				"NU",
				"NUMEROESTACIONES	statement"
			],
			[
				"frecuenci",
				"frecuenciaOptima"
			],
			[
				"tiempov",
				"tiempoViajePromedioModel	function"
			],
			[
				"tiempoViaje",
				"tiempoViajePromedioS"
			],
			[
				"FRE",
				"frecuenciaOptima"
			],
			[
				"FACT",
				"FACTORPASAJERO	statement"
			],
			[
				"tiempo",
				"tiempoEsperaPor2ViajeS	statement"
			],
			[
				"NUMER",
				"NUMEROESTACIONES	statement"
			],
			[
				"NUMERO",
				"NUMERORUTAS	statement"
			],
			[
				"_",
				"_SECUENCIAS	statement"
			],
			[
				"pasajerosEs",
				"pasajerosEspera2Viaje	function"
			],
			[
				"tiempoE",
				"tiempoEsperaPor2Bus	function"
			],
			[
				"tiempoEs",
				"tiempoEsperarPor2Viaje	function"
			],
			[
				"tiempoEsperaP",
				"tiempoEsperarPor2Viaje"
			],
			[
				"tiempoEspera",
				"tiempoEsperaPor2Bus	function"
			],
			[
				"_tiempo",
				"_tiempoEsperarPor2Viaje	statement"
			],
			[
				"tiemp",
				"tiempoEsperaPromedio"
			],
			[
				"pasajer",
				"pasajerosEspera2Viaje	function"
			],
			[
				"pasaj",
				"pasajerosEsperaSegundoViaje	function"
			],
			[
				"_se",
				"_SECUENCIAS	statement"
			],
			[
				"mT",
				"mTransbordoB	statement"
			],
			[
				"r",
				"r	param"
			],
			[
				"_TOPO",
				"_TOPOLOGIA	statement"
			],
			[
				"TOPO",
				"_TOPOLOGIA1"
			],
			[
				"mt",
				"mTransbordoB	statement"
			],
			[
				"pasajero",
				"pasajerosTransbordo	statement"
			],
			[
				"pueden",
				"puedenSubir	statement"
			],
			[
				"pass",
				"pasajerosTransbordo	statement"
			],
			[
				"psa",
				"pasajerosTransbordo	statement"
			],
			[
				"_mejorSecuencia",
				"_mejorSecuencia	statement"
			],
			[
				"_T",
				"_Transbordo4	statement"
			],
			[
				"tota",
				"total_time_g	statement"
			],
			[
				"watch",
				"watchI	statement"
			],
			[
				"new",
				"newCost	statement"
			],
			[
				"best",
				"bestVal	statement"
			],
			[
				"get",
				"getPosition"
			],
			[
				"lat",
				"latlng1"
			],
			[
				"estacion",
				"estacionI	forflow"
			],
			[
				"_tiempoEntreEstaciones",
				"_tiempoEntreEstaciones	statement"
			],
			[
				"secu",
				"secuencia"
			],
			[
				"pasaje",
				"pasajerosEstacion	function"
			],
			[
				"_ME",
				"_MEJOR_SECUENCIA	statement"
			],
			[
				"pue",
				"puedenSubir	statement"
			],
			[
				"pa",
				"pasajeros	statement"
			]
		]
	},
	"buffers":
	[
		{
			"file": "modeloOptimizacionGA2.py",
			"settings":
			{
				"buffer_size": 62161,
				"line_ending": "Unix"
			}
		},
		{
			"file": "modeloOptimizacionDB1.py",
			"settings":
			{
				"buffer_size": 66792,
				"line_ending": "Unix",
				"name": "modeloOptimizacionDB1.py"
			}
		},
		{
			"file": "modeloOptimizacionV1.py",
			"settings":
			{
				"buffer_size": 67733,
				"line_ending": "Unix",
				"name": "modeloOptimizacionV1.py"
			}
		},
		{
			"file": "archivos/horariosOpt.json",
			"settings":
			{
				"buffer_size": 1162424,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/rafapinzon/VRS/project_rs/templates/core/test/test_table.html",
			"settings":
			{
				"buffer_size": 611,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "[root@dbs1 optimizacion]# ./modeloOptimizacionV1.py\n[{1: 'Ida', 2: 'Vuelta'}, {3: 'Ida', 4: 'Vuelta'}, {5: 'Ida', 6: 'Vuelta'}]\n[[[1, 2, 3, 5, 9, 10, 11, 12], [12, 11, 10, 9, 7, 5, 3, 2, 1]], [[1, 2, 3, 4, 6,\n 8, 10, 11, 12], [12, 11, 14, 15, 3, 2, 1]], [[14, 15, 3, 2, 1], [1, 2, 3, 4, 6,\n 8, 13]]]\nTraceback (most recent call last):\n  File \"./modeloOptimizacionV1.py\", line 1501, in <module> optNelderMead()\n  File \"./modeloOptimizacionV1.py\", line 1482, in optNelderMeadx0 = np.array(optGAPyevolve())\n  File \"./modeloOptimizacionV1.py\", line 1458, in optGAPyevolve ga.evolve(freq_stats=5)\n  File \"/usr/lib/python2.6/site-packages/pyevolve/GSimpleGA.py\", line 755, in evolve self.internalPop.evaluate()\n  File \"/usr/lib/python2.6/site-packages/pyevolve/GPopulation.py\", line 378, in evaluate ind.evaluate(**args)\n  File \"/usr/lib/python2.6/site-packages/pyevolve/GenomeBase.py\", line 138, in evaluate for it in self.evaluator.applyFunctions(self, **args):\n  File \"/usr/lib/python2.6/site-packages/pyevolve/FunctionSlot.py\", line 180, in applyFunctions yield f(obj, **args)\n  File \"./modeloOptimizacionV1.py\", line 1348, in objFunctionGenetic obj1 = (sum(tiempoViajePromedio(r,t).sum() for r in range(lenf) for t in  [0,1]) +\n  File \"./modeloOptimizacionV1.py\", line 1348, in <genexpr> obj1 = (sum(tiempoViajePromedio(r,t).sum() for r in range(lenf) for t in  [0,1]) +\n  File \"./modeloOptimizacionV1.py\", line 960, in tiempoViajePromedio tiempoAcumuladoSubidaM = tiempoAcumuladoSubida(r,t)\n  File \"./modeloOptimizacionV1.py\", line 935, in tiempoAcumuladoSubida tiempoEspera = tiempoEsperaEstaciones(r,t)\n  File \"./modeloOptimizacionV1.py\", line 885, in tiempoEsperaEstaciones return pasajerosPuedenAbordar(r,t)[0]*TIEMPOABORDAR\n  File \"./modeloOptimizacionV1.py\", line 748, in pasajerosPuedenAbordar mTransbordo = transbordos()[r,t]\n  File \"./modeloOptimizacionV1.py\", line 537, in transbordos _mejoresSecuencias = mejoresSecuencias()\n  File \"./modeloOptimizacionV1.py\", line 526, in mejoresSecuencias return np.array(_mejoresSecuencias)\nValueError: setting an array element with a sequence.\n[root@dbs1 optimizacion]#",
			"settings":
			{
				"buffer_size": 2118,
				"line_ending": "Unix",
				"name": "[root@dbs1 optimizacion]# ./modeloOptimizacionV1.p"
			}
		},
		{
			"file": "/home/rafapinzon/VRS/project_rs/templates/core/test/test.html",
			"settings":
			{
				"buffer_size": 614,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/rafapinzon/VRS/project_rs/local_apps/core/urls.py",
			"settings":
			{
				"buffer_size": 1273,
				"line_ending": "Unix"
			}
		},
		{
			"file": "horariosOpt.json",
			"settings":
			{
				"buffer_size": 1160766,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Awesome question: Promoted\n\nI would suggest (each at most a day)\n\nLearn how to use Git and GitHub\nLearn how to use SVN\nLearn simple linux regular expressions\nFind a site with a few interview programming questions, and practice going through the full answer, with code, for some of them (a few a day should be good; do them in a language you don't know well if you already can ace most).\nSet up a crawler that can scrape some webpages and parse some basic data.\nSet up a bigger crawler that has to fill out a form or two.\nProgram a basic linear algebra library (matrices, vectors, multiplication)\nAdd SVD to this library\nAdd matrix inversion to this library\nAdd least squares regression to this library\nMake your library work efficiently with sparse data.\nLearn how to use list comprehensions in python.\nUpdate 1:\nRead the freaking manual for your favorite language. In the past I've wasted hours in Python because I didn't know that the Counter data structure existed, and kept getting the bugs from using Dicts as Counters. There are many examples like this.\nGet a stackoverflow account and learn to use the site. If you don't at least know that StackOverflow is an available resource, and you're an english-speaking programmer, you're doing it wrong.\nImplement a simple Machine learning algorithm on your own, with a whole pipeline. I.e. you read a simple input csv, split it into training and test set, run a simple algorithm with readily-tuneable or explorable hyperparameters, and a simple output of relevant statistics.\nLearn the how to make a simple line graph in Excel, and make sure you can do it right; i.e. properly labeled axes and tick marks, title and legends.\nLearn how to make a simple line graph in something other than Excel. Make sure you can do it right (same requirements).\nGet your eclipse installation fully pumped up: python dev tools, c dev tools, any other language you could ever write in, and make sure you can write a hello world successfully in each perspective. It'll save you time some future day.\nLearn the basic functionality of a NoSQL database; (you can learn a big chunk of mongoDB in a day)\nLearn the most basic functionality of SQL (you don't need to be a query guru,  but have a small clue about it).\nLearn a tool for in-depth parsing of HTML and XML\nImplement a list-of-lists graph data structure\nImplement random walk, PageRank, clustering coefficient finding (#triangles over possible triangles) and common neighbor number finding.\nImplement BFS, DFS, Shortest Path, topological sort and Minimum Spanning Tree (bonus for union-find version). Take a couple days if you have no algorithms background.\nMake a simple java applet that has at least some interaction with listeners and not just buttons and such.",
			"settings":
			{
				"buffer_size": 2748,
				"line_ending": "Unix",
				"name": "Awesome question: Promoted"
			}
		},
		{
			"contents": "regex model = \"(model\"\n[^(\\n]*?\\(model[^)\\n\\t]+?\\)*?",
			"settings":
			{
				"buffer_size": 52,
				"line_ending": "Unix",
				"name": "regex model = \"(model\""
			}
		},
		{
			"file": "/home/rafapinzon/VRS/project_rs/templates/core/mapp/update_gmap.html",
			"settings":
			{
				"buffer_size": 3258,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/rafapinzon/Dropbox/Proyecto Optimización/GenerarControl.py",
			"settings":
			{
				"buffer_size": 22739,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/rafapinzon/Dropbox/U/Progra/Python/testPYQT.py",
			"settings":
			{
				"buffer_size": 379,
				"line_ending": "Unix",
				"name": "import sys"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 243.0,
		"selected_items":
		[
			[
				"pyt",
				"Set Syntax: Python"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"DISABLE",
				"Package Control: Disable Package"
			],
			[
				"package",
				"Package Control: Remove Package"
			],
			[
				"disabl",
				"Package Control: Disable Package"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"INSTALL ",
				"Package Control: Install Package"
			]
		],
		"width": 435.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2deb499853c4371624f5a07e27c334aa' + 'bf8c4e67d14fb0525ba4f89698a6d7e1'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/rafapinzon/Dropbox/ProyectoMegaBusR/ProyectoOptimizacion",
		"/home/rafapinzon/Dropbox/ProyectoMegaBusR/ProyectoOptimizacion/archivos",
		"/home/rafapinzon/VRS",
		"/home/rafapinzon/VRS/project_rs",
		"/home/rafapinzon/VRS/project_rs/local_apps",
		"/home/rafapinzon/VRS/project_rs/local_apps/core",
		"/home/rafapinzon/VRS/project_rs/local_apps/core/forms",
		"/home/rafapinzon/VRS/project_rs/local_apps/core/views",
		"/home/rafapinzon/VRS/project_rs/rs",
		"/home/rafapinzon/VRS/project_rs/templates",
		"/home/rafapinzon/VRS/project_rs/templates/core",
		"/home/rafapinzon/VRS/project_rs/templates/core/mapp",
		"/home/rafapinzon/VRS/project_rs/templates/core/test",
		"/home/rafapinzon/Dropbox",
		"/home/rafapinzon/Dropbox/Proyecto Optimización"
	],
	"file_history":
	[
		"/home/rafapinzon/Dropbox/ProyectoMegaBusR/Test.py",
		"/home/rafapinzon/Dropbox/ProyectoMegaBusR/ProyectoOptimizacion/modeloOptimizacionGA1.py",
		"/home/rafapinzon/Dropbox/ProyectoMegaBusR/ProyectoOptimizacion/modeloOptimizacionDB.py",
		"/home/rafapinzon/Dropbox/Proyecto Optimización/GenerarControl.py",
		"/home/rafapinzon/Dropbox/ProyectoMegaBusR/ProyectoOptimizacion/Tablas(frecuencias 0,14237 0,07289 0,15171)",
		"/home/rafapinzon/Dropbox/ProyectoMegaBusR/ProyectoOptimizacion/Pruebas.txt",
		"/home/rafapinzon/Dropbox/Proyecto Optimización/Richard/GenerarControl.py",
		"/home/rafapinzon/Dropbox/U/Bases de Datos/modeloER/diagramaER.htm",
		"/home/rafapinzon/Dropbox/U/Administracion Proyectos de Software/PROYECTOS Y PLANEACION ESTRATEGICA.docx",
		"/home/rafapinzon/VRS/project_rs/rs/settings.py",
		"/home/rafapinzon/Dropbox/ProyectoMegaBusR/PruebaModelo.dat",
		"/home/rafapinzon/Dropbox/ProyectoMegaBusR/PruebaModelo.py",
		"/home/rafapinzon/Dropbox/ProyectoMegaBusR/ProyectoOptimizacion/Estructura Json Frecuencias_v3.json",
		"/home/rafapinzon/Dropbox/ProyectoMegaBusR/ProyectoOptimizacion/horarios.json",
		"/home/rafapinzon/CompilPython/mpascal/mpaslex.py",
		"/home/rafapinzon/Dropbox/Proyecto Optimización/Richard/GenerarControlconoptreal.py",
		"/home/rafapinzon/Dropbox/ProyectoMegaBusR/ProyectoOptimizacion/modeloOptimizacionPyomo.py",
		"/home/rafapinzon/Dropbox/ProyectoMegaBusR/ProyectoOptimizacion/modeloOptimizacion.py",
		"/home/rafapinzon/Dropbox/U/Sistemas Distribuidos/Threading.py",
		"/home/rafapinzon/Dropbox/U/Sistemas Distribuidos/Server.py",
		"/home/rafapinzon/Dropbox/U/Sistemas Distribuidos/Client.py",
		"/home/rafapinzon/Dropbox/ProyectoMegaBusR/ProyectoOptimizacion/modeloOptimizacionGA.py",
		"/home/rafapinzon/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
		"/home/rafapinzon/Dropbox/Proyecto Optimización/Richard/GenerarControl organizada con problemas.py",
		"/home/rafapinzon/Dropbox/ProyectoMegaBusR/ProyectoOptimizacion/modeloOptimizacionPyomo.dat",
		"/home/rafapinzon/Downloads/ply-3.4/AnaLexico-1.py",
		"/tmp/.fr-qnJfqu/ply-3.4/AnaLexico-1.py",
		"/home/rafapinzon/Downloads/Estructura Json Frecuencias_v2.txt",
		"/home/rafapinzon/Downloads/AnaLexico.py",
		"/home/rafapinzon/Dropbox/Proyecto Optimización/Richard/Excelexample.py",
		"/home/rafapinzon/Dropbox/U/Compiladores/pruebas.py",
		"/home/rafapinzon/Dropbox/U/Compiladores/Pruebas.pas",
		"/home/rafapinzon/Dropbox/Proyecto Optimización/json.py",
		"/home/rafapinzon/Dropbox/U/Progra/Python/databases.py",
		"/home/rafapinzon/Dropbox/ProyectoMegaBusR/ProyectoOptimizacion/tutorial.py",
		"/home/rafapinzon/Downloads/CoinIpopt/ThirdParty/Lapack/get.Lapack",
		"/home/rafapinzon/Dropbox/Proyecto Optimización/RafaStuff/modeloOptimizacion.py",
		"/home/rafapinzon/VRS/lib/python2.7/site-packages/setuptools/tests/test_resources.py",
		"/home/rafapinzon/VRS/include/python2.7/traceback.h",
		"/home/rafapinzon/VRS/lib/python2.7/site-packages/django/contrib/admin/static/admin/js/timeparse.js",
		"/home/rafapinzon/VRS/lib/python2.7/site-packages/django/contrib/gis/tests/data/invalid/emptypoints.dbf",
		"/home/rafapinzon/VRS/include/python2.7/timefuncs.h",
		"/home/rafapinzon/VRS/lib/python2.7/site-packages/setuptools/tests/test_easy_install.py",
		"/home/rafapinzon/VRS/lib/python2.7/site-packages/setuptools/tests/test_dist_info.py",
		"/home/rafapinzon/VRS/project_rs/TODO.txt",
		"/home/rafapinzon/Dropbox/ProyectoMegaBusR/ProyectoOptimizacion/modelo.sublime-project",
		"/home/rafapinzon/.config/sublime-text-3/Packages/User/Python.sublime-settings",
		"/home/rafapinzon/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/rafapinzon/VRS/project_rs/local_apps/core/views/SimAnnView.py",
		"/home/rafapinzon/VRS/project_rs/local_apps/core/forms/MappForm.py",
		"/home/rafapinzon/VRS/project_rs/local_apps/core/views/MapView.py",
		"/home/rafapinzon/VRS/project_rs/local_apps/core/views/TestView.py",
		"/home/rafapinzon/VRS/project_rs/local_apps/core/views/GeneticView.py",
		"/home/rafapinzon/VRS/project_rs/local_apps/core/views/UtilsView.py",
		"/home/rafapinzon/VRS/project_rs/prueba.py",
		"/home/rafapinzon/VRS/project_rs/templates/core/home.html",
		"/home/rafapinzon/VRS/project_rs/templates/core/simann.html",
		"/home/rafapinzon/VRS/project_rs/local_apps/core/forms/TestForm.py",
		"/home/rafapinzon/VRS/project_rs/local_apps/core/models/WatchModel.py",
		"/home/rafapinzon/VRS/project_rs/templates/core/mapp/update_gmap.html",
		"/home/rafapinzon/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/rafapinzon/.config/sublime-text-3/Packages/User/JSON.sublime-settings",
		"/home/rafapinzon/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/rafapinzon/.config/sublime-text-3/Packages/SublimeLinter/Default (Linux).sublime-keymap",
		"/home/rafapinzon/.config/sublime-text-3/Packages/Jedi - Python autocompletion/Default.sublime-keymap",
		"/home/rafapinzon/.config/sublime-text-3/Packages/SideBarEnhancements/Default (Linux).sublime-keymap",
		"/home/rafapinzon/.config/sublime-text-3/Packages/Anaconda/Default (Linux).sublime-keymap",
		"/home/rafapinzon/Dropbox/Proyecto Optimización/modeloOptimizacion.py",
		"/home/rafapinzon/.config/sublime-text-3/Packages/Anaconda/Anaconda.sublime-settings"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 100.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"_mejoresSecuencias",
			"i",
			"matBoolean",
			",8,",
			",0,",
			"10",
			",6,",
			",2,",
			",4,",
			",8,",
			"(,|\\[)[0-9](,|\\[)",
			",8,8,",
			",8,",
			"(,|\\[)[0-9](,|\\[| )",
			"Id",
			"copy",
			"round",
			"mat",
			";",
			"  ",
			";",
			"14; ",
			";",
			"4",
			"14; ",
			";",
			"'",
			"^print",
			";",
			",",
			";",
			",",
			"res1",
			"diagonal",
			"def objFunction(frecuencias):\n    global FrecuenciasOptimas\n\n    for i, x in enumerate(frecuencias):\n        # FrecuenciasOptimas[i] = ValoresFrecuencias[x]\n        FrecuenciasOptimas[i] = x\n\n    lenf = len(FrecuenciasOptimas)\n    obj1 = (sum(tiempoViajePromedio(r,t).sum() for r in range(lenf) for t in  [0,1]) + \n            (sum(tiempoEsperarPor2Viaje(r,t).sum() for r in range(lenf) for t in  [0,1]))*TIEMPOESPERA2BUS)*FACTORPASAJERO\n    obj2 = sum(COSTOS[r]* FrecuenciasOptimas[r] for r in range(lenf))*FACTOROPERADEOR\n    # vecO[frecuencias]\n    return obj1 + obj2",
			"Frecuencias",
			"(frecuencias)",
			"Transbordo",
			"Tansbordo",
			"value",
			"model.frecuenciaOptima",
			"instance",
			"\"idestacion\"",
			"nicio",
			"Salida",
			"tiempoViajePromedioSinEspera",
			"19119",
			"value",
			"...        ",
			"\n...         ",
			"...",
			"self",
			"\n...         ",
			"...",
			"0.066",
			"model=None",
			"float(model.frecuenciaOptima[r])",
			"matrizDemandaMedia",
			"tiempoViajePromedio",
			"FrecuenciasOptimas",
			"^m",
			"4",
			"frecuenciaTotal",
			"0",
			"where",
			"15",
			"Subida",
			"tiempoEntreEstaciones",
			"tiempoViajePromedioTot",
			"tiempoViajePromedio",
			"np.where",
			"DEMANDA",
			"_tiempoSubida",
			"np.zeros",
			"#_pasajerosPuedenAbordar[i-len(_pasajerosPuedenAbordar):,i].sum()",
			"secuencia[0]",
			"anterior",
			"_SECUENCIAS[r][0][-1]-1",
			"pasajerosTransbordo",
			"_pasajerosPuedenAbordar[i-len(_pasajerosPuedenAbordar):,i].sum()",
			"_pasajerosPuedenAbordar[:i,i].sum()",
			".value",
			"x",
			"gmaps",
			"school_y",
			"sch",
			"IntegerField",
			"school",
			"kopt",
			"bus_cost",
			"costo",
			"save_gene",
			"save_genet",
			"v",
			"strokeColor",
			"flight",
			"missing",
			"[",
			"11",
			"[[",
			"_mejoresSecuencias",
			"NUMERO",
			"NUMERORUTAS",
			"],",
			",",
			"[]",
			"]",
			"[",
			"0, 0",
			"pasajeros[i]\n",
			"[i]",
			"i",
			"I",
			"i",
			"secuencia[i-1]",
			"pasajerosPuedenAbordar",
			"secuencia[0]-1",
			"topologiaTot()",
			"np.array",
			"mat",
			")):",
			"[",
			",",
			"1",
			";",
			";\n",
			"0"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"TRANSBORDO",
			"10"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "modeloOptimizacionGA2.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 62161,
						"regions":
						{
						},
						"selection":
						[
							[
								90,
								90
							]
						],
						"settings":
						{
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 25841.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "modeloOptimizacionDB1.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 66792,
						"regions":
						{
						},
						"selection":
						[
							[
								66792,
								66792
							]
						],
						"settings":
						{
							"auto_name": "modeloOptimizacionDB1.py",
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "modeloOptimizacionV1.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 67733,
						"regions":
						{
						},
						"selection":
						[
							[
								62421,
								62421
							]
						],
						"settings":
						{
							"auto_name": "modeloOptimizacionV1.py",
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "archivos/horariosOpt.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1162424,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 270.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/home/rafapinzon/VRS/project_rs/templates/core/test/test_table.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 611,
						"regions":
						{
						},
						"selection":
						[
							[
								591,
								591
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2118,
						"regions":
						{
						},
						"selection":
						[
							[
								2092,
								2092
							]
						],
						"settings":
						{
							"auto_name": "[root@dbs1 optimizacion]# ./modeloOptimizacionV1.p",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/home/rafapinzon/VRS/project_rs/templates/core/test/test.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 614,
						"regions":
						{
						},
						"selection":
						[
							[
								259,
								259
							]
						],
						"settings":
						{
							"syntax": "Packages/Djaneiro/Syntaxes/HTML (Django).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/home/rafapinzon/VRS/project_rs/local_apps/core/urls.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1273,
						"regions":
						{
						},
						"selection":
						[
							[
								1273,
								1273
							]
						],
						"settings":
						{
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "horariosOpt.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1160766,
						"regions":
						{
						},
						"selection":
						[
							[
								1160240,
								1160240
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 9,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2748,
						"regions":
						{
						},
						"selection":
						[
							[
								86,
								86
							]
						],
						"settings":
						{
							"auto_name": "Awesome question: Promoted",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 10,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52,
						"regions":
						{
						},
						"selection":
						[
							[
								21,
								21
							]
						],
						"settings":
						{
							"auto_name": "regex model = \"(model\"",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/home/rafapinzon/VRS/project_rs/templates/core/mapp/update_gmap.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3258,
						"regions":
						{
						},
						"selection":
						[
							[
								1637,
								1637
							]
						],
						"settings":
						{
							"syntax": "Packages/Djaneiro/Syntaxes/HTML (Django).tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/home/rafapinzon/Dropbox/Proyecto Optimización/GenerarControl.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22739,
						"regions":
						{
						},
						"selection":
						[
							[
								311,
								311
							]
						],
						"settings":
						{
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/home/rafapinzon/Dropbox/U/Progra/Python/testPYQT.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 379,
						"regions":
						{
						},
						"selection":
						[
							[
								379,
								379
							]
						],
						"settings":
						{
							"auto_name": "import sys",
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.anaconda_documentation":
	{
		"height": 122.0
	},
	"output.exec":
	{
		"height": 122.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "modelo.sublime-project",
	"replace":
	{
		"height": 66.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"d",
				"def sol"
			],
			[
				"",
				"Dropbox/ProyectoMegaBusR/ProyectoOptimizacion/modeloOptimizacionV1.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 234.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
